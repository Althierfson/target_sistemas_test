// Mocks generated by Mockito 5.4.3 from annotations
// in target_sistemas_test/test/data/repositories/login/login_repository_impl_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:mockito/mockito.dart' as _i1;
import 'package:target_sistemas_test/core/login/login_success.dart' as _i3;
import 'package:target_sistemas_test/data/datasources/login/login_data_source_local.dart'
    as _i6;
import 'package:target_sistemas_test/data/datasources/login/login_data_source_remote.dart'
    as _i4;
import 'package:target_sistemas_test/data/models/user_model.dart' as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeUserModel_0 extends _i1.SmartFake implements _i2.UserModel {
  _FakeUserModel_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeLoggedinUserSaved_1 extends _i1.SmartFake
    implements _i3.LoggedinUserSaved {
  _FakeLoggedinUserSaved_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [LoginDataSourceRemote].
///
/// See the documentation for Mockito's code generation for more information.
class MockLoginDataSourceRemote extends _i1.Mock
    implements _i4.LoginDataSourceRemote {
  @override
  _i5.Future<_i2.UserModel> loginWithUserNameAndPassword({
    required String? userName,
    required String? password,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #loginWithUserNameAndPassword,
          [],
          {
            #userName: userName,
            #password: password,
          },
        ),
        returnValue: _i5.Future<_i2.UserModel>.value(_FakeUserModel_0(
          this,
          Invocation.method(
            #loginWithUserNameAndPassword,
            [],
            {
              #userName: userName,
              #password: password,
            },
          ),
        )),
        returnValueForMissingStub:
            _i5.Future<_i2.UserModel>.value(_FakeUserModel_0(
          this,
          Invocation.method(
            #loginWithUserNameAndPassword,
            [],
            {
              #userName: userName,
              #password: password,
            },
          ),
        )),
      ) as _i5.Future<_i2.UserModel>);
}

/// A class which mocks [LoginDataSourceLocal].
///
/// See the documentation for Mockito's code generation for more information.
class MockLoginDataSourceLocal extends _i1.Mock
    implements _i6.LoginDataSourceLocal {
  @override
  _i5.Future<_i3.LoggedinUserSaved> saveLoggedinUser(
          _i2.UserModel? userModel) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveLoggedinUser,
          [userModel],
        ),
        returnValue:
            _i5.Future<_i3.LoggedinUserSaved>.value(_FakeLoggedinUserSaved_1(
          this,
          Invocation.method(
            #saveLoggedinUser,
            [userModel],
          ),
        )),
        returnValueForMissingStub:
            _i5.Future<_i3.LoggedinUserSaved>.value(_FakeLoggedinUserSaved_1(
          this,
          Invocation.method(
            #saveLoggedinUser,
            [userModel],
          ),
        )),
      ) as _i5.Future<_i3.LoggedinUserSaved>);
}
